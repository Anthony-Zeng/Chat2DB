"use strict";(self.webpackChunkchat_2_db=self.webpackChunkchat_2_db||[]).push([[7233],{57870:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>p});n(67294);var r=n(3905);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}const a={title:"\u81ea\u7136\u8bed\u8a00\u751f\u6210SQL",sidebar_position:8,description:"Chat2DB\u4e00\u4e2a\u96c6\u6210\u4e86AI\u80fd\u529b\u7684\u3001\u652f\u6301Mysql\u3001Oracle\u7b49\u591a\u79cd\u6570\u636e\u5e93\u7ba1\u7406\u7684\u6570\u636e\u5e93\u5ba2\u6237\u7aef\u5de5\u5177"},l=void 0,c={unversionedId:"ai/nl2sql",id:"ai/nl2sql",title:"\u81ea\u7136\u8bed\u8a00\u751f\u6210SQL",description:"Chat2DB\u4e00\u4e2a\u96c6\u6210\u4e86AI\u80fd\u529b\u7684\u3001\u652f\u6301Mysql\u3001Oracle\u7b49\u591a\u79cd\u6570\u636e\u5e93\u7ba1\u7406\u7684\u6570\u636e\u5e93\u5ba2\u6237\u7aef\u5de5\u5177",source:"@site/docs/ai/nl2sql.md",sourceDirName:"ai",slug:"/ai/nl2sql",permalink:"/docs/ai/nl2sql",draft:!1,editUrl:"https://github.com/alibaba-open-source-website/Chat2DB/tree/main/docs/ai/nl2sql.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"\u81ea\u7136\u8bed\u8a00\u751f\u6210SQL",sidebar_position:8,description:"Chat2DB\u4e00\u4e2a\u96c6\u6210\u4e86AI\u80fd\u529b\u7684\u3001\u652f\u6301Mysql\u3001Oracle\u7b49\u591a\u79cd\u6570\u636e\u5e93\u7ba1\u7406\u7684\u6570\u636e\u5e93\u5ba2\u6237\u7aef\u5de5\u5177"},sidebar:"docSidebar",previous:{title:"\u670d\u52a1\u7aef\u67b6\u6784",permalink:"/docs/architecture/server"},next:{title:"SQL\u7ffb\u8bd1\u4e3a\u81ea\u7136\u8bed\u8a00",permalink:"/docs/ai/sql2nl"}},u={},p=[{value:"\u529f\u80fd\u4e00\uff1a\u81ea\u7136\u8bed\u8a00\u751f\u6210SQL",id:"\u529f\u80fd\u4e00\u81ea\u7136\u8bed\u8a00\u751f\u6210sql",level:2}],N={toc:p},E="wrapper";function d(e){var{components:t}=e,n=i(e,["components"]);return(0,r.kt)(E,o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){s(e,t,n[t])}))}return e}({},N,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u529f\u80fd\u4e00\u81ea\u7136\u8bed\u8a00\u751f\u6210sql"},"\u529f\u80fd\u4e00\uff1a\u81ea\u7136\u8bed\u8a00\u751f\u6210SQL"),(0,r.kt)("p",null,"\u9996\u5148\u5efa\u597d\u6d4b\u8bd5\u9700\u8981\u7528\u7684\u8868\uff0c\u8fd9\u91cc\u7528\u5230\u4e864\u5f20\u8868\u505a\u6d4b\u8bd5\u3002\u5927\u5bb6\u4e5f\u53ef\u4ee5\u5efa\u81ea\u5df1\u7684\u8868\u505a\u6d4b\u8bd5\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE student (\n  id INT PRIMARY KEY AUTO_INCREMENT COMMENT '\u5b66\u751fID',\n  name VARCHAR(50) NOT NULL COMMENT '\u5b66\u751f\u59d3\u540d',\n  gender VARCHAR(10) NOT NULL COMMENT '\u5b66\u751f\u6027\u522b',\n  birthday DATE NOT NULL COMMENT '\u5b66\u751f\u751f\u65e5',\n  address VARCHAR(100) NOT NULL COMMENT '\u5b66\u751f\u4f4f\u5740',\n  phone VARCHAR(20) NOT NULL COMMENT '\u5b66\u751f\u8054\u7cfb\u65b9\u5f0f'\n) COMMENT '\u5b66\u751f\u4fe1\u606f\u8868';\n\u79d1\u76ee\u8868\uff1a\n\nCREATE TABLE course (\n  id INT PRIMARY KEY AUTO_INCREMENT COMMENT '\u79d1\u76eeID',\n  name VARCHAR(50) NOT NULL COMMENT '\u79d1\u76ee\u540d\u79f0',\n  teacher VARCHAR(50) NOT NULL COMMENT '\u6388\u8bfe\u6559\u5e08',\n  credit INT NOT NULL COMMENT '\u79d1\u76ee\u5b66\u5206'\n) COMMENT '\u79d1\u76ee\u8868';\n\u5b66\u751f\u9009\u4fee\u79d1\u76ee\u8868\uff1a\n\nCREATE TABLE student_course (\n  id INT PRIMARY KEY AUTO_INCREMENT COMMENT '\u5173\u7cfbID',\n  student_id INT NOT NULL COMMENT '\u5b66\u751fID',\n  course_id INT NOT NULL COMMENT '\u79d1\u76eeID',\n  FOREIGN KEY (student_id) REFERENCES student(id),\n  FOREIGN KEY (course_id) REFERENCES course(id)\n) COMMENT '\u5b66\u751f\u9009\u4fee\u79d1\u76ee\u8868';\n\u5b66\u751f\u6210\u7ee9\u8868\uff1a\n\nCREATE TABLE score (\n  id INT PRIMARY KEY AUTO_INCREMENT COMMENT '\u6210\u7ee9ID',\n  student_id INT NOT NULL COMMENT '\u5b66\u751fID',\n  course_id INT NOT NULL COMMENT '\u79d1\u76eeID',\n  score INT NOT NULL COMMENT '\u6210\u7ee9',\n  FOREIGN KEY (student_id) REFERENCES student(id),\n  FOREIGN KEY (course_id) REFERENCES course(id)\n) COMMENT '\u5b66\u751f\u6210\u7ee9\u8868';\n")),(0,r.kt)("p",null,"\u8868\u5efa\u597d\u540e\uff0c\u53ef\u4ee5\u63d2\u5165\u4e00\u4e9b\u6d4b\u8bd5\u6570\u636e\u3002\n\u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528\u81ea\u7136\u8bed\u8a00\u8f93\u5165\u6bd4\u5982\uff1a\u201c\u67e5\u8be2\u5c0f\u660e\u7684\u5404\u79d1\u76ee\u6210\u7ee9\u201d\xa0\u751f\u6210\u7ed3\u679c\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"## ---BEGIN---\n## \u67e5\u8be2\u5b66\u751f\u5c0f\u660e\u7684\u5404\u79d1\u76ee\u6210\u7ee9\n\n## ---\u81ea\u7136\u8bed\u8a00\u8f6c\u6362:---\nSELECT score.score \nFROM score \nINNER JOIN student_course ON score.course_id = student_course.course_id \nINNER JOIN student ON student_course.student_id = student.id \nWHERE student.name = '\u5c0f\u660e'\n## --- END ---\n")),(0,r.kt)("p",null,'\u518d\u6bd4\u5982\uff1a"\u67e5\u8be2\u603b\u6210\u7ee9\u6392\u540d\u73ed\u7ea7\u524d\u5341\u7684\u540c\u5b66"\xa0\u751f\u6210\u7ed3\u679c\u5982\u4e0b\uff1a'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"## ---BEGIN---\n## \u67e5\u8be2\u603b\u6210\u7ee9\u6392\u540d\u73ed\u7ea7\u524d\u5341\u7684\u540c\u5b66\n\n## ---\u81ea\u7136\u8bed\u8a00\u8f6c\u6362:---\nSELECT s.name, SUM(sc.score) AS total_score\nFROM student s\nINNER JOIN student_course sc ON s.id = sc.student_id\nGROUP BY s.id\nORDER BY total_score DESC\nLIMIT 10;\n## --- END ---\n")),(0,r.kt)("p",null,"\u9700\u8981\u6ce8\u610f\u7684\u662f\u9009\u62e9\u81ea\u7136\u8bed\u8a00\u8f6cSQL\uff0c\u9700\u8981\u9009\u62e9\u4e00\u4e0b\u7528\u4e8e\u751f\u6210\u7684SQL\u7684\u539f\u59cb\u8868\uff0c\u76ee\u7684\u63d0\u5347Prompt\u8bad\u7ec3\u7684\u7cbe\u5ea6\uff0c\u8ba9GPT\u6839\u636e\u4f60\u9009\u62e9\u7684\u7279\u5b9a\u8868\u751f\u6210SQL\u3002"),(0,r.kt)("p",null,"\u8c03\u7528ChatGPT\xa0API\xa0Prompt\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Map<String, List<TableColumn>> tableColumns = buildTableColumn(queryParam, queryRequest.getTableNames());\nList<String> tableSchemas = tableColumns.entrySet().stream().map(\n    entry -> String.format("%s(%s)", entry.getKey(),\n                           entry.getValue().stream().map(TableColumn::getName).collect(\n                               Collectors.joining(", ")))).collect(Collectors.toList());\nString properties = String.join("\\n#", tableSchemas);\nString prompt = queryRequest.getMessage();\nString promptType = StringUtils.isBlank(queryRequest.getPromptType()) ? PromptType.NL_2_SQL.getCode()\n: queryRequest.getPromptType();\nPromptType pType = EasyEnumUtils.getEnum(PromptType.class, promptType);\nString ext = StringUtils.isNotBlank(queryRequest.getExt()) ? queryRequest.getExt() : "";\nString schemaProperty = CollectionUtils.isNotEmpty(tableSchemas) ? String.format(\n    "### \u8bf7\u6839\u636e\u4ee5\u4e0btable properties\u548cSQL input%s. %s\\n#\\n### %s SQL tables, with their properties:\\n#\\n# "\n    + "%s\\n#\\n#\\n### SQL input: %s", pType.getDescription(), ext, dataSourceType,\n    properties, prompt) : String.format("### \u8bf7\u6839\u636e\u4ee5\u4e0bSQL input%s. %s\\n#\\n### SQL input: %s",\n                                        pType.getDescription(), ext, prompt);\n')))}d.isMDXComponent=!0}}]);