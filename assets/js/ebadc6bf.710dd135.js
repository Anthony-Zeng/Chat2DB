"use strict";(self.webpackChunkchat_2_db=self.webpackChunkchat_2_db||[]).push([[43835],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),g=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=g(e.components);return a.createElement(c.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),l=g(n),h=i,m=l["".concat(c,".").concat(h)]||l[h]||d[h]||r;return n?a.createElement(m,s(s({ref:t},p),{},{components:n})):a.createElement(m,s({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=h;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[l]="string"==typeof e?e:i,s[1]=o;for(var g=2;g<r;g++)s[g]=n[g];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},53517:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>g,toc:()=>l});n(67294);var a=n(3905);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}const o={sidebar_position:6},c="Events",g={unversionedId:"events",id:"events",title:"Events",description:"To integrate well with modern JS frameworks and workflows, Dyte SDK also emits a",source:"@site/docs/react/events.mdx",sourceDirName:".",slug:"/events",permalink:"/react/events",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/react/events.mdx",tags:[],version:"current",lastUpdatedAt:1682415596,formattedLastUpdatedAt:"Apr 25, 2023",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Advanced usage",permalink:"/react/advanced-usage"},next:{title:"Sample app",permalink:"/react/sample-app"}},p={},l=[{value:"Connected to the meeting",id:"connected-to-the-meeting",level:3},{value:"Joined the meeting",id:"joined-the-meeting",level:3},{value:"Input media devices get connected to the meeting",id:"input-media-devices-get-connected-to-the-meeting",level:3},{value:"Disconnected from the meeting",id:"disconnected-from-the-meeting",level:3},{value:"End of the meeting",id:"end-of-the-meeting",level:3},{value:"Another participant joins the meeting",id:"another-participant-joins-the-meeting",level:3},{value:"Another participant leaves the meeting",id:"another-participant-leaves-the-meeting",level:3},{value:"Receiving a chat message",id:"receiving-a-chat-message",level:3},{value:"Receiving a custom broadcast event",id:"receiving-a-custom-broadcast-event",level:3},{value:"Receiving a custom targeted event",id:"receiving-a-custom-targeted-event",level:3},{value:"Detecting change in active speaker",id:"detecting-change-in-active-speaker",level:3},{value:"Recording started",id:"recording-started",level:3},{value:"Recording stopped",id:"recording-stopped",level:3},{value:"Detecting when user toggles their audio",id:"detecting-when-user-toggles-their-audio",level:3},{value:"Detecting when user toggles their video",id:"detecting-when-user-toggles-their-video",level:3},{value:"Detecting when user screenshares",id:"detecting-when-user-screenshares",level:3}],d={toc:l},h="wrapper";function m(e){var{components:t}=e,n=s(e,["components"]);return(0,a.kt)(h,r(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){i(e,t,n[t])}))}return e}({},d,n),{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"events"},"Events"),(0,a.kt)("p",null,"To integrate well with modern JS frameworks and workflows, Dyte SDK also emits a\nrich set of events on meeting events and state changes. Using these events on\nthe client side, you can make your app event driven and respond to changes in\nthe meeting in real-time. You can subscribe to the following events on the\n",(0,a.kt)("inlineCode",{parentName:"p"},"meeting")," object, which is an instance of ",(0,a.kt)("a",{parentName:"p",href:"./reference/meeting"},(0,a.kt)("inlineCode",{parentName:"a"},"Meeting")),"."),(0,a.kt)("h3",{id:"connected-to-the-meeting"},"Connected to the meeting"),(0,a.kt)("p",null,"This event is triggered when the participant has connected to the meeting but\nhasn't started producing or consuming content streams. Think of this as\nestablishing a successful connection to the meeting and nothing else."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.connect, () => {});\n")),(0,a.kt)("h3",{id:"joined-the-meeting"},"Joined the meeting"),(0,a.kt)("p",null,"This event is triggered when the participant actually joins the meeting, and can\nstart producing as well as consuming content streams."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.meetingJoined, () => {});\n")),(0,a.kt)("h3",{id:"input-media-devices-get-connected-to-the-meeting"},"Input media devices get connected to the meeting"),(0,a.kt)("p",null,"This event is triggered when the participant's local media input devices\n(camera, mic) are initialized and connected to the meeting for the first time.\nSince the media device states can be toggled only after the device is connected,\nyou need to use this event to manage the starting state of participant's audio\nor video."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.localMediaConnected, () => {});\n")),(0,a.kt)("h3",{id:"disconnected-from-the-meeting"},"Disconnected from the meeting"),(0,a.kt)("p",null,"This event is triggered when the participant gets disconnected from the meeting\nfor any reason. It could be a bad network connection, the meeting being exited\nby the participant manually, the meeting tab / browser / app being closed by the\nparticipant, or just any other reason."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.disconnect, () => {});\n")),(0,a.kt)("h3",{id:"end-of-the-meeting"},"End of the meeting"),(0,a.kt)("p",null,"This event is triggered when the meeting is ended by the host or by the\norganization (as an admin function). In this case, all the participants are\nkicked out and you can take actions such as asking for feedback or redirecting\nto an exercise."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.meetingEnded, () => {});\n")),(0,a.kt)("h3",{id:"another-participant-joins-the-meeting"},"Another participant joins the meeting"),(0,a.kt)("p",null,'This event is triggered when another participant joins the meeting. "Join" here\nas the same context as the ',(0,a.kt)("inlineCode",{parentName:"p"},"meetingJoined")," event: so when that event triggers\nfor the a participant, this event triggers for all other participants that have\nalready joined the meeting."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.participantJoin, (participant) => {});\n")),(0,a.kt)("h3",{id:"another-participant-leaves-the-meeting"},"Another participant leaves the meeting"),(0,a.kt)("p",null,'This event is triggered when another participant disconnects from the meeting.\n"Disconnect" here as the same context as the ',(0,a.kt)("inlineCode",{parentName:"p"},"disconnect")," event: so when that\nevent triggers for the a participant, this event triggers for all other\nparticipants that have already joined the meeting."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.participantLeave, (participant) => {});\n")),(0,a.kt)("h3",{id:"receiving-a-chat-message"},"Receiving a chat message"),(0,a.kt)("p",null,"This event is triggered when the participant receives a chat message. The\n",(0,a.kt)("inlineCode",{parentName:"p"},"chatMessage")," is an instance of ",(0,a.kt)("a",{parentName:"p",href:"./reference/chat-message"},(0,a.kt)("inlineCode",{parentName:"a"},"ChatMessage")),", whose\nprototype is defined in the reference section and can be directly used as a type\nif you prefer using TypeScript bindings."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.chatMessage, (chatMessage) => {});\n")),(0,a.kt)("h3",{id:"receiving-a-custom-broadcast-event"},"Receiving a custom broadcast event"),(0,a.kt)("p",null,"This event is triggered when a custom message is broadcast to all participants\nin the meeting. A custom message may contain any serializable data. You can read\nmore on how to\n",(0,a.kt)("a",{parentName:"p",href:"./advanced-usage#send-a-custom-message-to-other-participants-in-the-meeting-p2p-message--data-exchange"},"send these messages here"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.roomMessage, (message) => {});\n")),(0,a.kt)("h3",{id:"receiving-a-custom-targeted-event"},"Receiving a custom targeted event"),(0,a.kt)("p",null,"This event is triggered when a custom message is targeted to a particular\nparticipant in the meeting and only the target participant receives this event.\nA custom message may contain any serializable data. You can read more on how to\n",(0,a.kt)("a",{parentName:"p",href:"./advanced-usage#send-a-custom-message-to-other-participants-in-the-meeting-p2p-message--data-exchange"},"send these messages here"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.message, (message) => {});\n")),(0,a.kt)("h3",{id:"detecting-change-in-active-speaker"},"Detecting change in active speaker"),(0,a.kt)("p",null,"This event is triggered when the active speaker in the meeting changes. Active\nspeaker is the participant whose audio level has most recently been the highest\n(kind of like LRU with the selection factor being audio level). The\n",(0,a.kt)("inlineCode",{parentName:"p"},"participant")," is an instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"Participant"),", whose prototype is defined below\nin the reference section and can be directly used as a type if you prefer using\nTypeScript bindings."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.activeSpeaker (participant) => {\n});\n")),(0,a.kt)("h3",{id:"recording-started"},"Recording started"),(0,a.kt)("p",null,"This event is triggered when a recording of the meeting is started by the host\nor by the organization (as an admin function). You can use this event to show a\npopup or a warning to the participants about the meeting being recorded."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.recordingStarted, () => {});\n")),(0,a.kt)("h3",{id:"recording-stopped"},"Recording stopped"),(0,a.kt)("p",null,"This event is triggered when a recording of the meeting is started by the host\nor by the organization (as an admin function). You can use this event to tell\nthe participants about the recording being stopped."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.recordingStopped, () => {});\n")),(0,a.kt)("h3",{id:"detecting-when-user-toggles-their-audio"},"Detecting when user toggles their audio"),(0,a.kt)("p",null,"This event is triggered when the user mutes / unmutes their audio"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.audioUpdated, (audioEnabled) => {});\n")),(0,a.kt)("h3",{id:"detecting-when-user-toggles-their-video"},"Detecting when user toggles their video"),(0,a.kt)("p",null,"This event is triggered when the user toggles their video off or on"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.videoUpdated, (videoEnabled) => {});\n")),(0,a.kt)("h3",{id:"detecting-when-user-screenshares"},"Detecting when user screenshares"),(0,a.kt)("p",null,"This event is triggered when the user starts or stops screensharing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"meeting.on(meeting.Events.screenSharingUpdated, (isScreensharing) => {});\n")))}m.isMDXComponent=!0}}]);