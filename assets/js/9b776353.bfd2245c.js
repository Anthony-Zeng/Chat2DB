"use strict";(self.webpackChunkchat_2_db=self.webpackChunkchat_2_db||[]).push([[1288],{19402:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>u,toc:()=>g});n(67294);var i=n(3905);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const s={title:"Exchange data between plugin and meeting",sidebar_position:2},r=void 0,u={unversionedId:"guides/exchange-data-between-plugin-and-meeting",id:"guides/exchange-data-between-plugin-and-meeting",title:"Exchange data between plugin and meeting",description:"Plugin SDK allows you to exchange data between the dyte meeting and the plugin.",source:"@site/docs/plugin-sdk/guides/exchange-data-between-plugin-and-meeting.mdx",sourceDirName:"guides",slug:"/guides/exchange-data-between-plugin-and-meeting",permalink:"/plugin-sdk/guides/exchange-data-between-plugin-and-meeting",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/plugin-sdk/guides/exchange-data-between-plugin-and-meeting.mdx",tags:[],version:"current",lastUpdatedAt:1682507282,formattedLastUpdatedAt:"Apr 26, 2023",sidebarPosition:2,frontMatter:{title:"Exchange data between plugin and meeting",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"How to work with Plugin Stores",permalink:"/plugin-sdk/guides/how-to-work-with-plugin-stores"},next:{title:"Frequently Asked Questions",permalink:"/plugin-sdk/frequently-asked-questions"}},d={},g=[{value:"Client SDK",id:"client-sdk",level:2},{value:"Send custom messages to plugin SDK",id:"send-custom-messages-to-plugin-sdk",level:3},{value:"Listen for custom events from plugin SDK",id:"listen-for-custom-events-from-plugin-sdk",level:3},{value:"Plugin SDK",id:"plugin-sdk",level:2},{value:"Send custom events to the dyte meeting",id:"send-custom-events-to-the-dyte-meeting",level:3},{value:"Listen for custom messages from the dyte meeting",id:"listen-for-custom-messages-from-the-dyte-meeting",level:3}],p={toc:g},m="wrapper";function c(e){var{components:t}=e,n=o(e,["components"]);return(0,i.kt)(m,l(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){a(e,t,n[t])}))}return e}({},p,n),{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Plugin SDK allows you to exchange data between the dyte meeting and the plugin.\nThis guide talks about how this can be done:"),(0,i.kt)("h2",{id:"client-sdk"},"Client SDK"),(0,i.kt)("h3",{id:"send-custom-messages-to-plugin-sdk"},"Send custom messages to plugin SDK"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ready")," event is emitted once the plugin is ready to accept data from the\nclient SDK. all custom events must be sent only after this event is emitted."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"sendData")," method accepts an object with the following properties:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"eventName"),(0,i.kt)("td",{parentName:"tr",align:null},"Name of the event."),(0,i.kt)("td",{parentName:"tr",align:null},"string")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"data"),(0,i.kt)("td",{parentName:"tr",align:null},"The data you wish to send to the plugin."),(0,i.kt)("td",{parentName:"tr",align:null},"any")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const id = '<your-plugin-id>';\nconst plugin = meeting.plugins.all.get(id);\n\nplugin.on('ready', () => {\n  plugin.sendData({\n    eventName: 'customEventToPlugin',\n    data: '<your-custom-data>',\n  });\n});\n")),(0,i.kt)("h3",{id:"listen-for-custom-events-from-plugin-sdk"},"Listen for custom events from plugin SDK"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const id = '<your-plugin-id>';\nconst plugin = meeting.plugins.all.get(id);\n\nplugin.on('myAwesomeEvent', (data) => {\n  console.log(data);\n});\n")),(0,i.kt)("h2",{id:"plugin-sdk"},"Plugin SDK"),(0,i.kt)("h3",{id:"send-custom-events-to-the-dyte-meeting"},"Send custom events to the dyte meeting"),(0,i.kt)("p",null,"The emitEvent method is used to emit custom events to the (client SDK) room."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import DytePlugin from \"@dytesdk/plugin-sdk\";\n\nconst plugin = DytePlugin.init();\n\nplugin.room.emitEvent('myAwesomeEvent', {...});\n")),(0,i.kt)("h3",{id:"listen-for-custom-messages-from-the-dyte-meeting"},"Listen for custom messages from the dyte meeting"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import DytePlugin from '@dytesdk/plugin-sdk';\n\nconst plugin = DytePlugin.init();\n\nplugin.room.on('customEventToPlugin', (data) => {\n  console.log(data);\n});\n")))}c.isMDXComponent=!0}}]);