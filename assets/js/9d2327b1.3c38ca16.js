"use strict";(self.webpackChunkchat_2_db=self.webpackChunkchat_2_db||[]).push([[65556],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),p=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return i.createElement(c.Provider,{value:t},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=p(n),d=r,m=s["".concat(c,".").concat(d)]||s[d]||g[d]||l;return n?i.createElement(m,a(a({ref:t},u),{},{components:n})):i.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[s]="string"==typeof e?e:r,a[1]=o;for(var p=2;p<l;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},50721:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>s});n(67294);var i=n(3905);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const o={title:"Plugins",description:"Interact with plugins in a meeting.",sidebar_position:8,tags:["mobile-core","plugins"]},c="Plugins",p={unversionedId:"plugins",id:"plugins",title:"Plugins",description:"Interact with plugins in a meeting.",source:"@site/docs/ios-core/plugins.mdx",sourceDirName:".",slug:"/plugins",permalink:"/ios-core/plugins",draft:!1,editUrl:"https://github.com/dyte-in/docs/tree/main/docs/ios-core/plugins.mdx",tags:[{label:"mobile-core",permalink:"/ios-core/tags/mobile-core"},{label:"plugins",permalink:"/ios-core/tags/plugins"}],version:"current",lastUpdatedAt:1682475427,formattedLastUpdatedAt:"Apr 26, 2023",sidebarPosition:8,frontMatter:{title:"Plugins",description:"Interact with plugins in a meeting.",sidebar_position:8,tags:["mobile-core","plugins"]},sidebar:"tutorialSidebar",previous:{title:"Voting on a poll",permalink:"/ios-core/polls/voting-on-a-poll"},next:{title:"Recording",permalink:"/ios-core/recording"}},u={},s=[{value:"Playing with plugins",id:"playing-with-plugins",level:2},{value:"Active plugin",id:"active-plugin",level:2},{value:"Listening to plugins in a meeting",id:"listening-to-plugins-in-a-meeting",level:2}],g={toc:s},d="wrapper";function m(e){var{components:t}=e,n=a(e,["components"]);return(0,i.kt)(d,l(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},i=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),i.forEach((function(t){r(e,t,n[t])}))}return e}({},g,n),{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"plugins"},"Plugins"),(0,i.kt)("p",null,"The meetings plugins can be accessed using ",(0,i.kt)("inlineCode",{parentName:"p"},"meeting.plugins"),". It provides two\nmain objects, ",(0,i.kt)("inlineCode",{parentName:"p"},"all")," which contains list of all Plugin objects in a\n",(0,i.kt)("inlineCode",{parentName:"p"},"DyteMeeting"),". And ",(0,i.kt)("inlineCode",{parentName:"p"},"active")," list which contains plugins which are enabled and\nare currently being used in this meeting."),(0,i.kt)("h2",{id:"playing-with-plugins"},"Playing with plugins"),(0,i.kt)("p",null,"Plugins are webviews which can be added in any view. To be able to get webview\nfrom DytePlugin one needs to first acivate a plugin. To do that all we need to\ndo is call ",(0,i.kt)("inlineCode",{parentName:"p"},"plugin.active()")," which will trigger a callback in\n",(0,i.kt)("inlineCode",{parentName:"p"},"onPluginActivated()"),". Similarely to deactivate a plugin one can call\n",(0,i.kt)("inlineCode",{parentName:"p"},"plugin.deactivate()")," and that plugin will be deactivated in the meeting."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"plugin.activate() // to activate a plugin\nplugin.deactivate()   // to deactivate a plugin\n")),(0,i.kt)("h2",{id:"active-plugin"},"Active plugin"),(0,i.kt)("p",null,"To check if a ",(0,i.kt)("inlineCode",{parentName:"p"},"plugin")," is active or not in a meeting one can use"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"let isActive = plugin.isActive\n")),(0,i.kt)("h2",{id:"listening-to-plugins-in-a-meeting"},"Listening to plugins in a meeting"),(0,i.kt)("p",null,"To be able to listen to plugin events you need to implement a methods from\ncallback ",(0,i.kt)("inlineCode",{parentName:"p"},"DytePluginEventsListener"),". You can subscribe to this events by calling\n",(0,i.kt)("inlineCode",{parentName:"p"},"meeting.addPluginEventsListener(dytePluginEventsListener: listener)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"    extension MeetingViewModel: DytePluginEventsListener {\n      func onPluginActivated(plugin: DytePlugin) {\n      // your code to handle plugin activation\n    }\n\n    func onPluginDeactivated(plugin: DytePlugin) {\n      // your code to handle plugin de-activation\n    }\n}\n")))}m.isMDXComponent=!0}}]);